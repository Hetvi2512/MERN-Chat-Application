{"ast":null,"code":"// TO display the name of the person with whom logged in user has chatted\nexport const getSender = (loggedUser, users) => {\n  var _users$, _users$2, _users$3;\n\n  return ((_users$ = users[0]) === null || _users$ === void 0 ? void 0 : _users$._id) === (loggedUser === null || loggedUser === void 0 ? void 0 : loggedUser._id) ? (_users$2 = users[1]) === null || _users$2 === void 0 ? void 0 : _users$2.name : (_users$3 = users[0]) === null || _users$3 === void 0 ? void 0 : _users$3.name;\n};\nexport const getSenderDetails = (loggedUser, users) => {\n  var _users$4;\n\n  return ((_users$4 = users[0]) === null || _users$4 === void 0 ? void 0 : _users$4._id) === (loggedUser === null || loggedUser === void 0 ? void 0 : loggedUser._id) ? users[1] : users[0];\n};\nexport const isSameSender = (messages, m, i, userId) => {\n  return i < messages.length - 1 && (messages[i + 1].sender._id !== m.sender._id || messages[i + 1].sender._id === undefined) && messages[i].sender._id !== userId;\n};\nexport const isLastMessage = (messages, i, userId) => {\n  return i === messages.length - 1 && messages[messages.length - 1].sender._id !== userId && messages[messages.length - 1].sender._id;\n};","map":{"version":3,"sources":["D:/MERN Chat-App/react-frontend/src/config/ChatLogics.js"],"names":["getSender","loggedUser","users","_id","name","getSenderDetails","isSameSender","messages","m","i","userId","length","sender","undefined","isLastMessage"],"mappings":"AAAA;AACA,OAAO,MAAMA,SAAS,GAAG,CAACC,UAAD,EAAaC,KAAb,KAAuB;AAAA;;AAC9C,SAAO,YAAAA,KAAK,CAAC,CAAD,CAAL,oDAAUC,GAAV,OAAkBF,UAAlB,aAAkBA,UAAlB,uBAAkBA,UAAU,CAAEE,GAA9B,gBAAoCD,KAAK,CAAC,CAAD,CAAzC,6CAAoC,SAAUE,IAA9C,eAAqDF,KAAK,CAAC,CAAD,CAA1D,6CAAqD,SAAUE,IAAtE;AACD,CAFM;AAIP,OAAO,MAAMC,gBAAgB,GAAG,CAACJ,UAAD,EAAaC,KAAb,KAAuB;AAAA;;AACrD,SAAO,aAAAA,KAAK,CAAC,CAAD,CAAL,sDAAUC,GAAV,OAAkBF,UAAlB,aAAkBA,UAAlB,uBAAkBA,UAAU,CAAEE,GAA9B,IAAoCD,KAAK,CAAC,CAAD,CAAzC,GAA+CA,KAAK,CAAC,CAAD,CAA3D;AACD,CAFM;AAGP,OAAO,MAAMI,YAAY,GAAG,CAACC,QAAD,EAAWC,CAAX,EAAcC,CAAd,EAAiBC,MAAjB,KAA4B;AACtD,SACED,CAAC,GAAGF,QAAQ,CAACI,MAAT,GAAkB,CAAtB,KACCJ,QAAQ,CAACE,CAAC,GAAG,CAAL,CAAR,CAAgBG,MAAhB,CAAuBT,GAAvB,KAA+BK,CAAC,CAACI,MAAF,CAAST,GAAxC,IACCI,QAAQ,CAACE,CAAC,GAAG,CAAL,CAAR,CAAgBG,MAAhB,CAAuBT,GAAvB,KAA+BU,SAFjC,KAGAN,QAAQ,CAACE,CAAD,CAAR,CAAYG,MAAZ,CAAmBT,GAAnB,KAA2BO,MAJ7B;AAMD,CAPM;AAQP,OAAO,MAAMI,aAAa,GAAG,CAACP,QAAD,EAAWE,CAAX,EAAcC,MAAd,KAAyB;AACpD,SACED,CAAC,KAAKF,QAAQ,CAACI,MAAT,GAAkB,CAAxB,IACAJ,QAAQ,CAACA,QAAQ,CAACI,MAAT,GAAkB,CAAnB,CAAR,CAA8BC,MAA9B,CAAqCT,GAArC,KAA6CO,MAD7C,IAEAH,QAAQ,CAACA,QAAQ,CAACI,MAAT,GAAkB,CAAnB,CAAR,CAA8BC,MAA9B,CAAqCT,GAHvC;AAKD,CANM","sourcesContent":["// TO display the name of the person with whom logged in user has chatted\r\nexport const getSender = (loggedUser, users) => {\r\n  return users[0]?._id === loggedUser?._id ? users[1]?.name : users[0]?.name;\r\n};\r\n\r\nexport const getSenderDetails = (loggedUser, users) => {\r\n  return users[0]?._id === loggedUser?._id ? users[1] : users[0];\r\n};\r\nexport const isSameSender = (messages, m, i, userId) => {\r\n  return (\r\n    i < messages.length - 1 &&\r\n    (messages[i + 1].sender._id !== m.sender._id ||\r\n      messages[i + 1].sender._id === undefined) &&\r\n    messages[i].sender._id !== userId\r\n  );\r\n};\r\nexport const isLastMessage = (messages, i, userId) => {\r\n  return (\r\n    i === messages.length - 1 &&\r\n    messages[messages.length - 1].sender._id !== userId &&\r\n    messages[messages.length - 1].sender._id\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}