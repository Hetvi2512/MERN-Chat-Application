{"ast":null,"code":"var _jsxFileName = \"D:\\\\MERN Chat-App\\\\react-frontend\\\\src\\\\components\\\\ScrollableChat.js\";\nimport { Avatar } from \"@chakra-ui/avatar\";\nimport { Tooltip } from \"@chakra-ui/tooltip\";\nimport React from \"react\";\nimport ScrollableFeed from \"react-scrollable-feed\";\nimport { isSameSender, isLastMessage, isSameSenderMargin, isSameUser } from \"../config/ChatLogics\";\nimport { ChatState } from \"../Context/ChatProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ScrollableChat(_ref) {\n  let {\n    messages\n  } = _ref;\n  const {\n    user\n  } = ChatState();\n  return /*#__PURE__*/_jsxDEV(ScrollableFeed, {\n    children: messages === null || messages === void 0 ? void 0 : messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\"\n      },\n      children: [isSameSender(messages, message, index, user._id) || isLastMessage(messages, index, user._id) && /*#__PURE__*/_jsxDEV(Tooltip, {\n        label: message.sender.name,\n        placement: \"bottom-start\",\n        hasArrow: true,\n        children: /*#__PURE__*/_jsxDEV(Avatar, {\n          mt: \"7px\",\n          mr: 1,\n          size: \"sm\",\n          cursor: \"pointer\",\n          name: message.sender.name,\n          src: message.sender.pic\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          backgroundColor: `${message.sender._id === user._id ? \"#BEE3F8\" : \"#B9F5D0\"}`,\n          marginLeft: isSameSenderMargin(messages, message, index, user._id),\n          marginTop: isSameUser(messages, message, index, user._id) ? 3 : 10,\n          borderRadius: \"20px\",\n          padding: \"5px 15px\",\n          maxWidth: \"75%\"\n        },\n        children: message.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, message._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n\n_c = ScrollableChat;\nexport default ScrollableChat;\n\nvar _c;\n\n$RefreshReg$(_c, \"ScrollableChat\");","map":{"version":3,"sources":["D:/MERN Chat-App/react-frontend/src/components/ScrollableChat.js"],"names":["Avatar","Tooltip","React","ScrollableFeed","isSameSender","isLastMessage","isSameSenderMargin","isSameUser","ChatState","ScrollableChat","messages","user","map","message","index","display","_id","sender","name","pic","backgroundColor","marginLeft","marginTop","borderRadius","padding","maxWidth","content"],"mappings":";AAAA,SAASA,MAAT,QAAuB,mBAAvB;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,SACEC,YADF,EAEEC,aAFF,EAGEC,kBAHF,EAIEC,UAJF,QAKO,sBALP;AAMA,SAASC,SAAT,QAA0B,yBAA1B;;;AACA,SAASC,cAAT,OAAsC;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AACpC,QAAM;AAAEC,IAAAA;AAAF,MAAWH,SAAS,EAA1B;AACA,sBACE,QAAC,cAAD;AAAA,cACGE,QADH,aACGA,QADH,uBACGA,QAAQ,CAAEE,GAAV,CAAc,CAACC,OAAD,EAAUC,KAAV,kBACb;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAZ;AAAA,iBACGX,YAAY,CAACM,QAAD,EAAWG,OAAX,EAAoBC,KAApB,EAA2BH,IAAI,CAACK,GAAhC,CAAZ,IACEX,aAAa,CAACK,QAAD,EAAWI,KAAX,EAAkBH,IAAI,CAACK,GAAvB,CAAb,iBACC,QAAC,OAAD;AACE,QAAA,KAAK,EAAEH,OAAO,CAACI,MAAR,CAAeC,IADxB;AAEE,QAAA,SAAS,EAAC,cAFZ;AAGE,QAAA,QAAQ,MAHV;AAAA,+BAKE,QAAC,MAAD;AACE,UAAA,EAAE,EAAC,KADL;AAEE,UAAA,EAAE,EAAE,CAFN;AAGE,UAAA,IAAI,EAAC,IAHP;AAIE,UAAA,MAAM,EAAC,SAJT;AAKE,UAAA,IAAI,EAAEL,OAAO,CAACI,MAAR,CAAeC,IALvB;AAME,UAAA,GAAG,EAAEL,OAAO,CAACI,MAAR,CAAeE;AANtB;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,cAHN,eAkBE;AACE,QAAA,KAAK,EAAE;AACLC,UAAAA,eAAe,EAAG,GAChBP,OAAO,CAACI,MAAR,CAAeD,GAAf,KAAuBL,IAAI,CAACK,GAA5B,GAAkC,SAAlC,GAA8C,SAC/C,EAHI;AAILK,UAAAA,UAAU,EAAEf,kBAAkB,CAC5BI,QAD4B,EAE5BG,OAF4B,EAG5BC,KAH4B,EAI5BH,IAAI,CAACK,GAJuB,CAJzB;AAULM,UAAAA,SAAS,EAAEf,UAAU,CAACG,QAAD,EAAWG,OAAX,EAAoBC,KAApB,EAA2BH,IAAI,CAACK,GAAhC,CAAV,GACP,CADO,GAEP,EAZC;AAaLO,UAAAA,YAAY,EAAE,MAbT;AAcLC,UAAAA,OAAO,EAAE,UAdJ;AAeLC,UAAAA,QAAQ,EAAE;AAfL,SADT;AAAA,kBAmBGZ,OAAO,CAACa;AAnBX;AAAA;AAAA;AAAA;AAAA,cAlBF;AAAA,OAAsCb,OAAO,CAACG,GAA9C;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AA8CD;;KAhDQP,c;AAkDT,eAAeA,cAAf","sourcesContent":["import { Avatar } from \"@chakra-ui/avatar\";\r\nimport { Tooltip } from \"@chakra-ui/tooltip\";\r\nimport React from \"react\";\r\nimport ScrollableFeed from \"react-scrollable-feed\";\r\nimport {\r\n  isSameSender,\r\n  isLastMessage,\r\n  isSameSenderMargin,\r\n  isSameUser,\r\n} from \"../config/ChatLogics\";\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\nfunction ScrollableChat({ messages }) {\r\n  const { user } = ChatState();\r\n  return (\r\n    <ScrollableFeed>\r\n      {messages?.map((message, index) => (\r\n        <div style={{ display: \"flex\" }} key={message._id}>\r\n          {isSameSender(messages, message, index, user._id) ||\r\n            (isLastMessage(messages, index, user._id) && (\r\n              <Tooltip\r\n                label={message.sender.name}\r\n                placement=\"bottom-start\"\r\n                hasArrow\r\n              >\r\n                <Avatar\r\n                  mt=\"7px\"\r\n                  mr={1}\r\n                  size=\"sm\"\r\n                  cursor=\"pointer\"\r\n                  name={message.sender.name}\r\n                  src={message.sender.pic}\r\n                />\r\n              </Tooltip>\r\n            ))}\r\n          <span\r\n            style={{\r\n              backgroundColor: `${\r\n                message.sender._id === user._id ? \"#BEE3F8\" : \"#B9F5D0\"\r\n              }`,\r\n              marginLeft: isSameSenderMargin(\r\n                messages,\r\n                message,\r\n                index,\r\n                user._id\r\n              ),\r\n              marginTop: isSameUser(messages, message, index, user._id)\r\n                ? 3\r\n                : 10,\r\n              borderRadius: \"20px\",\r\n              padding: \"5px 15px\",\r\n              maxWidth: \"75%\",\r\n            }}\r\n          >\r\n            {message.content}\r\n          </span>\r\n        </div>\r\n      ))}\r\n    </ScrollableFeed>\r\n  );\r\n}\r\n\r\nexport default ScrollableChat;\r\n"]},"metadata":{},"sourceType":"module"}