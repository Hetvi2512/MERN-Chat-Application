{"ast":null,"code":"var _jsxFileName = \"D:\\\\MERN Chat-App\\\\react-frontend\\\\src\\\\components\\\\Modals\\\\UpdateGroupChatModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Modal, ModalOverlay, ModalContent, ModalHeader, ModalFooter, ModalBody, ModalCloseButton, Button, useDisclosure, IconButton, useToast, Box, FormControl, Input, Spinner } from \"@chakra-ui/react\";\nimport { ViewIcon } from \"@chakra-ui/icons\";\nimport { ChatState } from \"../../Context/ChatProvider\";\nimport UserBadgeItem from \"../Users/UserBadgeItem\";\nimport axios from \"axios\";\nimport UserListItem from \"../Users/UserListItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction UpdateGroupChatModal(_ref) {\n  _s();\n\n  let {\n    fetchAgain,\n    setFetchAgain,\n    fetchMessage\n  } = _ref;\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  const [groupChatName, setGroupChatName] = useState();\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [renameLoading, setRenameLoading] = useState(false);\n  const {\n    selectedChat,\n    setSelectedChat,\n    user\n  } = ChatState();\n  const toast = useToast();\n\n  const handleAddUser = user1 => {\n    if (selectedChat.users.find(u => u._id === user1._id)) {\n      toast({\n        title: \"User already in the group\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top\"\n      });\n      return;\n    }\n\n    console.log(selectedChat.groupAdmin._id);\n\n    if (selectedChat.groupAdmin._id !== user._id) {\n      console.log(\"INSIDE\");\n      toast({\n        title: \"Only admins can add someone!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\"\n      });\n      return;\n    }\n\n    setLoading(true);\n    axios.put(\"/api/chat/personadd\", {\n      chatId: selectedChat._id,\n      userId: user1._id\n    }, {\n      headers: {\n        Authorization: `Bearer ${user.token}`\n      }\n    }).then(response => {\n      setSelectedChat(response.data);\n      setFetchAgain(!fetchAgain);\n      setLoading(false);\n    }).catch(error => {\n      setLoading(false);\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\"\n      });\n    });\n    setGroupChatName(\"\");\n  };\n\n  const handleDelete = user1 => {\n    if (selectedChat.groupAdmin._id !== user._id && user1._id !== user._id) {\n      toast({\n        title: \"Only admins can remove someone!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\"\n      });\n      return;\n    }\n\n    setLoading(true);\n    axios.put(\"/api/chat/removeperson\", {\n      chatId: selectedChat._id,\n      userId: user1._id\n    }, {\n      headers: {\n        Authorization: `Bearer ${user.token}`\n      }\n    }).then(response => {\n      user1._id === user._id ? setSelectedChat() : setSelectedChat(response.data);\n      setFetchAgain(!fetchAgain);\n      fetchMessage();\n      setLoading(false);\n    }).catch(error => {\n      setLoading(false);\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\"\n      });\n    });\n  };\n\n  const handleSearch = query => {\n    if (!query) {\n      return;\n    }\n\n    try {\n      setSearch(query);\n      setLoading(true);\n      axios.get(`/api/user?search=${search}`, {\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      }).then(response => {\n        console.log(response.data);\n        setSearchResult(response.data);\n        setLoading(false);\n      });\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Search Results\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\"\n      });\n    }\n  };\n\n  const handleRename = () => {\n    if (!groupChatName) return;\n    setRenameLoading(true);\n    axios.put(\"/api/chat/rename\", {\n      chatId: selectedChat._id,\n      chatName: groupChatName\n    }, {\n      headers: {\n        Authorization: `Bearer ${user.token}`\n      }\n    }).then(response => {\n      setSelectedChat(response.data);\n      setFetchAgain(!fetchAgain);\n      setRenameLoading(false);\n    }).catch(error => {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\"\n      });\n      setRenameLoading(false);\n    });\n    setGroupChatName(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      d: {\n        base: \"flex\"\n      },\n      icon: /*#__PURE__*/_jsxDEV(ViewIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 46\n      }, this),\n      onClick: onOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      onClose: onClose,\n      isOpen: isOpen,\n      isCentered: true,\n      children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          fontSize: \"40px\",\n          fontFamily: \"Work sans\",\n          d: \"flex\",\n          justifyContent: \"center\",\n          children: selectedChat.chatName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          d: \"flex\",\n          flexDir: \"column\",\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            w: \"100%\",\n            d: \"flex\",\n            flexWrap: \"wrap\",\n            pb: 3,\n            children: selectedChat.users.map(u => /*#__PURE__*/_jsxDEV(UserBadgeItem, {\n              user: u,\n              handleFunction: () => handleDelete(u)\n            }, u._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            d: \"flex\",\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Chat Name\",\n              mb: 3,\n              value: groupChatName,\n              onChange: e => setGroupChatName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"solid\",\n              colorScheme: \"teal\",\n              ml: 1,\n              isLoading: renameLoading,\n              onClick: handleRename,\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Add User to group\",\n              mb: 1,\n              onChange: e => handleSearch(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this), loading ? /*#__PURE__*/_jsxDEV(Spinner, {\n            size: \"lg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this) : searchResult === null || searchResult === void 0 ? void 0 : searchResult.map(user => /*#__PURE__*/_jsxDEV(UserListItem, {\n            user: user,\n            handleFunction: () => handleAddUser(user)\n          }, user._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              handleDelete(user);\n            },\n            children: \"Leave Group\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(UpdateGroupChatModal, \"DxLxu5FJF7C3FXuk0+su0aFelaU=\", false, function () {\n  return [useDisclosure, useToast];\n});\n\n_c = UpdateGroupChatModal;\nexport default UpdateGroupChatModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateGroupChatModal\");","map":{"version":3,"sources":["D:/MERN Chat-App/react-frontend/src/components/Modals/UpdateGroupChatModal.js"],"names":["React","useState","Modal","ModalOverlay","ModalContent","ModalHeader","ModalFooter","ModalBody","ModalCloseButton","Button","useDisclosure","IconButton","useToast","Box","FormControl","Input","Spinner","ViewIcon","ChatState","UserBadgeItem","axios","UserListItem","UpdateGroupChatModal","fetchAgain","setFetchAgain","fetchMessage","isOpen","onOpen","onClose","groupChatName","setGroupChatName","search","setSearch","searchResult","setSearchResult","loading","setLoading","renameLoading","setRenameLoading","selectedChat","setSelectedChat","user","toast","handleAddUser","user1","users","find","u","_id","title","status","duration","isClosable","position","console","log","groupAdmin","put","chatId","userId","headers","Authorization","token","then","response","data","catch","error","description","message","handleDelete","handleSearch","query","get","handleRename","chatName","base","map","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Button,\r\n  useDisclosure,\r\n  IconButton,\r\n  useToast,\r\n  Box,\r\n  FormControl,\r\n  Input,\r\n  Spinner,\r\n} from \"@chakra-ui/react\";\r\nimport { ViewIcon } from \"@chakra-ui/icons\";\r\nimport { ChatState } from \"../../Context/ChatProvider\";\r\nimport UserBadgeItem from \"../Users/UserBadgeItem\";\r\nimport axios from \"axios\";\r\nimport UserListItem from \"../Users/UserListItem\";\r\nfunction UpdateGroupChatModal({ fetchAgain, setFetchAgain, fetchMessage }) {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const [groupChatName, setGroupChatName] = useState();\r\n  const [search, setSearch] = useState(\"\");\r\n  const [searchResult, setSearchResult] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [renameLoading, setRenameLoading] = useState(false);\r\n\r\n  const { selectedChat, setSelectedChat, user } = ChatState();\r\n  const toast = useToast();\r\n  const handleAddUser = (user1) => {\r\n    if (selectedChat.users.find((u) => u._id === user1._id)) {\r\n      toast({\r\n        title: \"User already in the group\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"top\",\r\n      });\r\n      return;\r\n    }\r\n    console.log(selectedChat.groupAdmin._id);\r\n    if (selectedChat.groupAdmin._id !== user._id) {\r\n      console.log(\"INSIDE\");\r\n      toast({\r\n        title: \"Only admins can add someone!\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    axios\r\n      .put(\r\n        \"/api/chat/personadd\",\r\n        {\r\n          chatId: selectedChat._id,\r\n          userId: user1._id,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${user.token}`,\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        setSelectedChat(response.data);\r\n        setFetchAgain(!fetchAgain);\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        toast({\r\n          title: \"Error Occured!\",\r\n          description: error.response.data.message,\r\n          status: \"error\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n          position: \"bottom\",\r\n        });\r\n      });\r\n    setGroupChatName(\"\");\r\n  };\r\n  const handleDelete = (user1) => {\r\n    if (selectedChat.groupAdmin._id !== user._id && user1._id !== user._id) {\r\n      toast({\r\n        title: \"Only admins can remove someone!\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    axios\r\n      .put(\r\n        \"/api/chat/removeperson\",\r\n        {\r\n          chatId: selectedChat._id,\r\n          userId: user1._id,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${user.token}`,\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        user1._id === user._id\r\n          ? setSelectedChat()\r\n          : setSelectedChat(response.data);\r\n\r\n        setFetchAgain(!fetchAgain);\r\n        fetchMessage();\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        toast({\r\n          title: \"Error Occured!\",\r\n          description: error.response.data.message,\r\n          status: \"error\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n          position: \"bottom\",\r\n        });\r\n      });\r\n  };\r\n  const handleSearch = (query) => {\r\n    if (!query) {\r\n      return;\r\n    }\r\n    try {\r\n      setSearch(query);\r\n      setLoading(true);\r\n      axios\r\n        .get(`/api/user?search=${search}`, {\r\n          headers: { Authorization: `Bearer ${user.token}` },\r\n        })\r\n        .then((response) => {\r\n          console.log(response.data);\r\n          setSearchResult(response.data);\r\n          setLoading(false);\r\n        });\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the Search Results\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  };\r\n  const handleRename = () => {\r\n    if (!groupChatName) return;\r\n    setRenameLoading(true);\r\n    axios\r\n      .put(\r\n        \"/api/chat/rename\",\r\n        { chatId: selectedChat._id, chatName: groupChatName },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${user.token}`,\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        setSelectedChat(response.data);\r\n        setFetchAgain(!fetchAgain);\r\n        setRenameLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        toast({\r\n          title: \"Error Occured!\",\r\n          description: error.response.data.message,\r\n          status: \"error\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n          position: \"bottom\",\r\n        });\r\n        setRenameLoading(false);\r\n      });\r\n    setGroupChatName(\"\");\r\n  };\r\n  return (\r\n    <>\r\n      <IconButton d={{ base: \"flex\" }} icon={<ViewIcon />} onClick={onOpen} />\r\n      <Modal onClose={onClose} isOpen={isOpen} isCentered>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader\r\n            fontSize=\"40px\"\r\n            fontFamily=\"Work sans\"\r\n            d=\"flex\"\r\n            justifyContent=\"center\"\r\n          >\r\n            {selectedChat.chatName}\r\n          </ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody d=\"flex\" flexDir=\"column\" alignItems=\"center\">\r\n            <Box w=\"100%\" d=\"flex\" flexWrap=\"wrap\" pb={3}>\r\n              {selectedChat.users.map((u) => (\r\n                <UserBadgeItem\r\n                  key={u._id}\r\n                  user={u}\r\n                  handleFunction={() => handleDelete(u)}\r\n                />\r\n              ))}\r\n            </Box>\r\n            <FormControl d=\"flex\">\r\n              <Input\r\n                placeholder=\"Chat Name\"\r\n                mb={3}\r\n                value={groupChatName}\r\n                onChange={(e) => setGroupChatName(e.target.value)}\r\n              />\r\n              <Button\r\n                variant=\"solid\"\r\n                colorScheme=\"teal\"\r\n                ml={1}\r\n                isLoading={renameLoading}\r\n                onClick={handleRename}\r\n              >\r\n                Update\r\n              </Button>\r\n            </FormControl>\r\n            <FormControl>\r\n              <Input\r\n                placeholder=\"Add User to group\"\r\n                mb={1}\r\n                onChange={(e) => handleSearch(e.target.value)}\r\n              />\r\n            </FormControl>\r\n            {loading ? (\r\n              <Spinner size=\"lg\" />\r\n            ) : (\r\n              searchResult?.map((user) => (\r\n                <UserListItem\r\n                  key={user._id}\r\n                  user={user}\r\n                  handleFunction={() => handleAddUser(user)}\r\n                />\r\n              ))\r\n            )}\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button\r\n              onClick={() => {\r\n                handleDelete(user);\r\n              }}\r\n            >\r\n              Leave Group\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UpdateGroupChatModal;\r\n"]},"metadata":{},"sourceType":"module"}