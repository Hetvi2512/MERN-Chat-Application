{"ast":null,"code":"var _jsxFileName = \"D:\\\\MERN Chat-App\\\\react-frontend\\\\src\\\\components\\\\Modals\\\\GroupChatModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Modal, ModalOverlay, ModalContent, ModalHeader, ModalFooter, ModalBody, ModalCloseButton, useDisclosure, Button, useToast, FormControl, Input } from \"@chakra-ui/react\";\nimport { ChatState } from \"../../Context/ChatProvider\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction GroupChatModal(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  const [groupChatName, setGroupChatName] = useState();\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const toast = useToast();\n  const {\n    user,\n    chats,\n    setChats\n  } = ChatState();\n\n  const handleSearch = query => {\n    if (!query) {\n      return;\n    }\n\n    try {\n      setSearch(query);\n      setLoading(true);\n      axios.get(`/api/user?search=${search}`, {\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      }).then(response => {\n        setSearchResult(response.data);\n        setLoading(false);\n      });\n    } catch (error) {}\n  };\n\n  const handleSubmit = () => {\n    toast({\n      title: \"Error Occured!\",\n      description: \"Failed to Load the Search Results\",\n      status: \"error\",\n      duration: 5000,\n      isClosable: true,\n      position: \"bottom-left\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: onOpen,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isOpen,\n      onClose: onClose,\n      children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          fontSize: \"35px\",\n          fontFamily: \"Work sans\",\n          d: \"flex\",\n          justifyContent: \"center\",\n          children: \"Create Group Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          d: \"flex\",\n          flexDir: \"column\",\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Chat Name\",\n              mb: 3,\n              onChange: e => setGroupChatName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Add Users\",\n              mb: 1,\n              onChange: e => handleSearch(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            colorScheme: \"blue\",\n            mr: 3,\n            onClick: handleSubmit,\n            children: \"Create Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(GroupChatModal, \"PHSzC1yTrtxvyG3eWGbgwqRvKTk=\", false, function () {\n  return [useDisclosure, useToast];\n});\n\n_c = GroupChatModal;\nexport default GroupChatModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"GroupChatModal\");","map":{"version":3,"sources":["D:/MERN Chat-App/react-frontend/src/components/Modals/GroupChatModal.js"],"names":["React","useState","Modal","ModalOverlay","ModalContent","ModalHeader","ModalFooter","ModalBody","ModalCloseButton","useDisclosure","Button","useToast","FormControl","Input","ChatState","axios","GroupChatModal","children","isOpen","onOpen","onClose","groupChatName","setGroupChatName","selectedUsers","setSelectedUsers","search","setSearch","searchResult","setSearchResult","loading","setLoading","toast","user","chats","setChats","handleSearch","query","get","headers","Authorization","token","then","response","data","error","handleSubmit","title","description","status","duration","isClosable","position","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  useDisclosure,\r\n  Button,\r\n  useToast,\r\n  FormControl,\r\n  Input,\r\n} from \"@chakra-ui/react\";\r\nimport { ChatState } from \"../../Context/ChatProvider\";\r\nimport axios from \"axios\";\r\nfunction GroupChatModal({ children }) {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const [groupChatName, setGroupChatName] = useState();\r\n  const [selectedUsers, setSelectedUsers] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [searchResult, setSearchResult] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const toast = useToast();\r\n  const { user, chats, setChats } = ChatState();\r\n  const handleSearch = (query) => {\r\n    if (!query) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setSearch(query);\r\n      setLoading(true);\r\n      axios\r\n        .get(`/api/user?search=${search}`, {\r\n          headers: { Authorization: `Bearer ${user.token}` },\r\n        })\r\n        .then((response) => {\r\n          setSearchResult(response.data);\r\n          setLoading(false);\r\n        });\r\n    } catch (error) {}\r\n  };\r\n  const handleSubmit = () => {\r\n    toast({\r\n      title: \"Error Occured!\",\r\n      description: \"Failed to Load the Search Results\",\r\n      status: \"error\",\r\n      duration: 5000,\r\n      isClosable: true,\r\n      position: \"bottom-left\",\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <span onClick={onOpen}>{children}</span>\r\n\r\n      <Modal isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader\r\n            fontSize=\"35px\"\r\n            fontFamily=\"Work sans\"\r\n            d=\"flex\"\r\n            justifyContent=\"center\"\r\n          >\r\n            Create Group Chat\r\n          </ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody d=\"flex\" flexDir=\"column\" alignItems=\"center\">\r\n            <FormControl>\r\n              <Input\r\n                placeholder=\"Chat Name\"\r\n                mb={3}\r\n                onChange={(e) => setGroupChatName(e.target.value)}\r\n              />\r\n            </FormControl>\r\n            <FormControl>\r\n              <Input\r\n                placeholder=\"Add Users\"\r\n                mb={1}\r\n                onChange={(e) => handleSearch(e.target.value)}\r\n              />\r\n            </FormControl>\r\n            {/* selected users */}\r\n            {/* Render Searched User */}\r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            <Button colorScheme=\"blue\" mr={3} onClick={handleSubmit}>\r\n              Create Chat\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default GroupChatModal;\r\n"]},"metadata":{},"sourceType":"module"}