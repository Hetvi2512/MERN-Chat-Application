{"ast":null,"code":"var _jsxFileName = \"D:\\\\MERN Chat-App\\\\react-frontend\\\\src\\\\components\\\\SingleChat.js\",\n    _s = $RefreshSig$();\n\nimport { IconButton } from \"@chakra-ui/button\";\nimport { FormControl } from \"@chakra-ui/form-control\";\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\nimport { Input } from \"@chakra-ui/input\";\nimport { Box, Text } from \"@chakra-ui/layout\";\nimport { Spinner } from \"@chakra-ui/spinner\";\nimport React, { useState } from \"react\";\nimport { getSender, getSenderDetails } from \"../config/ChatLogics\";\nimport { ChatState } from \"../Context/ChatProvider\";\nimport ProfileModal from \"./Modals/ProfileModal\";\nimport UpdateGroupChatModal from \"./Modals/UpdateGroupChatModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction SingleChat(_ref) {\n  _s();\n\n  let {\n    fetchAgain,\n    setFetchAgain\n  } = _ref;\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const {\n    user,\n    setSelectedChat,\n    selectedChat\n  } = ChatState();\n\n  const sendMessage = () => {};\n\n  const typingHandler = () => {};\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: selectedChat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        fontSize: {\n          base: \"28px\",\n          md: \"30px\"\n        },\n        pb: 3,\n        px: 2,\n        w: \"100%\",\n        fontFamily: \"Work sans\",\n        d: \"flex\",\n        justifyContent: {\n          base: \"space-between\"\n        },\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          d: {\n            base: \"flex\",\n            md: \"none\"\n          },\n          icon: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 21\n          }, this),\n          onClick: () => setSelectedChat(\"\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), !selectedChat.isGroupChat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [\" \", getSender(user, selectedChat.users), /*#__PURE__*/_jsxDEV(ProfileModal, {\n            user: getSenderDetails(user, selectedChat.users)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [selectedChat.chatName.toUpperCase(), /*#__PURE__*/_jsxDEV(UpdateGroupChatModal, {\n            fetchAgain: fetchAgain,\n            setFetchAgain: setFetchAgain\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        d: \"flex\",\n        flexDir: \"column\",\n        justifyContent: \"flex-end\",\n        p: 3,\n        bg: \"#E8E8E8\",\n        w: \"100%\",\n        h: \"100%\",\n        borderRadius: \"lg\",\n        overflowY: \"hidden\",\n        children: [loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Spinner, {\n            size: \"xl\",\n            w: 20,\n            h: 20,\n            alignSelf: \"center\",\n            margin: \"auto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this)\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \" Messages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          onKeyDown: sendMessage,\n          isRequired: true,\n          mt: 3,\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            variant: \"filled\",\n            bg: \"#E0E0E0\",\n            placeholder: \"Enter a message\",\n            onChange: typingHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        d: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        h: \"100%\",\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"3xl\",\n          pb: 3,\n          fontFamily: \"Work sans\",\n          children: \"Click on a user to start chatting\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)\n  }, void 0, false);\n}\n\n_s(SingleChat, \"hq4AwCU/cjqbSZgH8tz5GrloLy8=\");\n\n_c = SingleChat;\nexport default SingleChat;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleChat\");","map":{"version":3,"sources":["D:/MERN Chat-App/react-frontend/src/components/SingleChat.js"],"names":["IconButton","FormControl","ArrowBackIcon","Input","Box","Text","Spinner","React","useState","getSender","getSenderDetails","ChatState","ProfileModal","UpdateGroupChatModal","SingleChat","fetchAgain","setFetchAgain","messages","setMessages","loading","setLoading","user","setSelectedChat","selectedChat","sendMessage","typingHandler","base","md","isGroupChat","users","chatName","toUpperCase"],"mappings":"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","sourcesContent":["import { IconButton } from \"@chakra-ui/button\";\r\nimport { FormControl } from \"@chakra-ui/form-control\";\r\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\r\nimport { Input } from \"@chakra-ui/input\";\r\nimport { Box, Text } from \"@chakra-ui/layout\";\r\nimport { Spinner } from \"@chakra-ui/spinner\";\r\nimport React, { useState } from \"react\";\r\nimport { getSender, getSenderDetails } from \"../config/ChatLogics\";\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\nimport ProfileModal from \"./Modals/ProfileModal\";\r\nimport UpdateGroupChatModal from \"./Modals/UpdateGroupChatModal\";\r\n\r\nfunction SingleChat({ fetchAgain, setFetchAgain }) {\r\n  const [messages, setMessages] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const { user, setSelectedChat, selectedChat } = ChatState();\r\n  const sendMessage = () => {};\r\n  const typingHandler = () => {};\r\n  return (\r\n    <>\r\n      {selectedChat ? (\r\n        <>\r\n          <Text\r\n            fontSize={{ base: \"28px\", md: \"30px\" }}\r\n            pb={3}\r\n            px={2}\r\n            w=\"100%\"\r\n            fontFamily=\"Work sans\"\r\n            d=\"flex\"\r\n            justifyContent={{ base: \"space-between\" }}\r\n            alignItems=\"center\"\r\n          >\r\n            <IconButton\r\n              d={{ base: \"flex\", md: \"none\" }}\r\n              icon={<ArrowBackIcon />}\r\n              onClick={() => setSelectedChat(\"\")}\r\n            />\r\n            {!selectedChat.isGroupChat ? (\r\n              <>\r\n                {\" \"}\r\n                {getSender(user, selectedChat.users)}\r\n                <ProfileModal\r\n                  user={getSenderDetails(user, selectedChat.users)}\r\n                />\r\n              </>\r\n            ) : (\r\n              <>\r\n                {selectedChat.chatName.toUpperCase()}\r\n                <UpdateGroupChatModal\r\n                  fetchAgain={fetchAgain}\r\n                  setFetchAgain={setFetchAgain}\r\n                />\r\n              </>\r\n            )}\r\n          </Text>\r\n          <Box\r\n            d=\"flex\"\r\n            flexDir=\"column\"\r\n            justifyContent=\"flex-end\"\r\n            p={3}\r\n            bg=\"#E8E8E8\"\r\n            w=\"100%\"\r\n            h=\"100%\"\r\n            borderRadius=\"lg\"\r\n            overflowY=\"hidden\"\r\n          >\r\n            {loading ? (\r\n              <>\r\n                <Spinner\r\n                  size=\"xl\"\r\n                  w={20}\r\n                  h={20}\r\n                  alignSelf=\"center\"\r\n                  margin=\"auto\"\r\n                />\r\n              </>\r\n            ) : (\r\n              <div> Messages</div>\r\n            )}\r\n            <FormControl onKeyDown={sendMessage} isRequired mt={3}>\r\n              <Input\r\n                variant=\"filled\"\r\n                bg=\"#E0E0E0\"\r\n                placeholder=\"Enter a message\"\r\n                onChange={typingHandler}\r\n              />\r\n            </FormControl>\r\n          </Box>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Box d=\"flex\" alignItems=\"center\" justifyContent=\"center\" h=\"100%\">\r\n            <Text fontSize=\"3xl\" pb={3} fontFamily=\"Work sans\">\r\n              Click on a user to start chatting\r\n            </Text>\r\n          </Box>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SingleChat;\r\n"]},"metadata":{},"sourceType":"module"}