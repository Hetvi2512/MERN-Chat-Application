[{"D:\\MERN Chat-App\\react-frontend\\src\\index.js":"1","D:\\MERN Chat-App\\react-frontend\\src\\reportWebVitals.js":"2","D:\\MERN Chat-App\\react-frontend\\src\\App.js":"3","D:\\MERN Chat-App\\react-frontend\\src\\Pages\\HomePage.js":"4","D:\\MERN Chat-App\\react-frontend\\src\\Pages\\ChatPage.js":"5","D:\\MERN Chat-App\\react-frontend\\src\\components\\Authentication\\Login.js":"6","D:\\MERN Chat-App\\react-frontend\\src\\components\\Authentication\\Signup.js":"7","D:\\MERN Chat-App\\react-frontend\\src\\Context\\ChatProvider.js":"8","D:\\MERN Chat-App\\react-frontend\\src\\components\\SideDrawer.js":"9","D:\\MERN Chat-App\\react-frontend\\src\\components\\MyChats.js":"10","D:\\MERN Chat-App\\react-frontend\\src\\components\\ChatBox.js":"11","D:\\MERN Chat-App\\react-frontend\\src\\components\\Modals\\ProfileModal.js":"12","D:\\MERN Chat-App\\react-frontend\\src\\components\\ChatLoading.js":"13","D:\\MERN Chat-App\\react-frontend\\src\\components\\Users\\UserListItem.js":"14","D:\\MERN Chat-App\\react-frontend\\src\\config\\ChatLogics.js":"15","D:\\MERN Chat-App\\react-frontend\\src\\components\\Modals\\GroupChatModal.js":"16","D:\\MERN Chat-App\\react-frontend\\src\\components\\Users\\UserBadgeItem.js":"17","D:\\MERN Chat-App\\react-frontend\\src\\components\\SingleChat.js":"18","D:\\MERN Chat-App\\react-frontend\\src\\components\\Modals\\UpdateGroupChatModal.js":"19","D:\\MERN Chat-App\\react-frontend\\src\\components\\ScrollableChat.js":"20"},{"size":456,"mtime":1638945089706,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"22"},{"size":340,"mtime":1638427267363,"results":"24","hashOfConfig":"22"},{"size":1449,"mtime":1638446489236,"results":"25","hashOfConfig":"22"},{"size":1176,"mtime":1638862525765,"results":"26","hashOfConfig":"22"},{"size":3589,"mtime":1638534179162,"results":"27","hashOfConfig":"22"},{"size":5615,"mtime":1638526210102,"results":"28","hashOfConfig":"22"},{"size":971,"mtime":1639379063021,"results":"29","hashOfConfig":"22"},{"size":5927,"mtime":1638526471181,"results":"30","hashOfConfig":"22"},{"size":3660,"mtime":1638519134211,"results":"31","hashOfConfig":"22"},{"size":645,"mtime":1638519202257,"results":"32","hashOfConfig":"22"},{"size":1835,"mtime":1638448331853,"results":"33","hashOfConfig":"22"},{"size":579,"mtime":1638440894736,"results":"34","hashOfConfig":"22"},{"size":858,"mtime":1638441088275,"results":"35","hashOfConfig":"22"},{"size":1456,"mtime":1638964832759,"results":"36","hashOfConfig":"22"},{"size":5157,"mtime":1639379075704,"results":"37","hashOfConfig":"22"},{"size":580,"mtime":1638514171880,"results":"38","hashOfConfig":"22"},{"size":7579,"mtime":1639379078868,"results":"39","hashOfConfig":"22"},{"size":7299,"mtime":1639379074471,"results":"40","hashOfConfig":"22"},{"size":1829,"mtime":1638947785293,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1qjfduw",{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"D:\\MERN Chat-App\\react-frontend\\src\\index.js",[],["86","87"],"D:\\MERN Chat-App\\react-frontend\\src\\reportWebVitals.js",[],"D:\\MERN Chat-App\\react-frontend\\src\\App.js",[],"D:\\MERN Chat-App\\react-frontend\\src\\Pages\\HomePage.js",["88"],"import React, { useEffect } from \"react\";\r\nimport {\r\n  Box,\r\n  Container,\r\n  Tab,\r\n  Text,\r\n  Tabs,\r\n  TabList,\r\n  TabPanels,\r\n  TabPanel,\r\n} from \"@chakra-ui/react\";\r\nimport Login from \"../components/Authentication/Login\";\r\nimport SignUp from \"../components/Authentication/Signup\";\r\nimport { useHistory } from \"react-router-dom\";\r\nfunction HomePage() {\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n    if (userInfo) {\r\n      history.push(\"/chats\");\r\n    }\r\n  }, []);\r\n  return (\r\n    <Container maxW=\"xl\" centerContent>\r\n      <Box\r\n        d=\"flex\"\r\n        justifyContent=\"center\"\r\n        p={3}\r\n        bg=\"white\"\r\n        w=\"100%\"\r\n        m=\"40px 0 15px 0\"\r\n        borderRadius=\"lg\"\r\n        borderWidth=\"1px\"\r\n      >\r\n        <Text fontSize=\"4xl\" fontFamily=\"Work Sans\">\r\n          Tiny Talks\r\n        </Text>\r\n      </Box>\r\n      <Box bg=\"white\" w=\"100%\" p={4} borderRadius=\"lg\" borderWidth=\"1px\">\r\n        <Tabs variant=\"soft-rounded\">\r\n          <TabList mb=\"1em\">\r\n            <Tab width=\"50%\">Login</Tab>\r\n            <Tab width=\"50%\">Sign up</Tab>\r\n          </TabList>\r\n          <TabPanels>\r\n            <TabPanel>\r\n              <Login />\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <SignUp />\r\n            </TabPanel>\r\n          </TabPanels>\r\n        </Tabs>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","D:\\MERN Chat-App\\react-frontend\\src\\Pages\\ChatPage.js",[],"D:\\MERN Chat-App\\react-frontend\\src\\components\\Authentication\\Login.js",[],"D:\\MERN Chat-App\\react-frontend\\src\\components\\Authentication\\Signup.js",[],"D:\\MERN Chat-App\\react-frontend\\src\\Context\\ChatProvider.js",[],"D:\\MERN Chat-App\\react-frontend\\src\\components\\SideDrawer.js",[],"D:\\MERN Chat-App\\react-frontend\\src\\components\\MyChats.js",["89","90"],"import { Button } from \"@chakra-ui/button\";\r\nimport { AddIcon } from \"@chakra-ui/icons\";\r\nimport { Box, Stack, Text } from \"@chakra-ui/layout\";\r\nimport { useToast } from \"@chakra-ui/toast\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { getSender } from \"../config/ChatLogics\";\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\nimport ChatLoading from \"./ChatLoading\";\r\nimport GroupChatModal from \"./Modals/GroupChatModal\";\r\n\r\n//Displaying the list of users with latest chats\r\nfunction MyChats({ fetchAgain }) {\r\n  const toast = useToast();\r\n  const { user, setUser, selectedChat, setSelectedChat, chats, setChats } =\r\n    ChatState();\r\n  const [loggedUser, setLoggedUser] = useState();\r\n\r\n  // To fetch the latest chats\r\n  const fetchChats = () => {\r\n    axios\r\n      .get(\"/api/chat\", {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setChats(response.data);\r\n      })\r\n      .catch((error) => {\r\n        toast({\r\n          title: \"Something went wrong\",\r\n          description: \"Failed to load the chat\",\r\n          status: \"error\",\r\n          duration: 2000,\r\n          isClosable: true,\r\n          position: \"bottom-left\",\r\n        });\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    fetchChats();\r\n    setLoggedUser(JSON.parse(localStorage.getItem(\"userInfo\")));\r\n  }, [fetchAgain]);\r\n  return (\r\n    <Box\r\n      d={{ base: selectedChat ? \"none\" : \"flex\", md: \"flex\" }}\r\n      flexDir=\"column\"\r\n      alignItems=\"center\"\r\n      p={3}\r\n      bg=\"white\"\r\n      w={{ base: \"100%\", md: \"31%\" }}\r\n      borderRadius=\"lg\"\r\n      borderWidth=\"1px\"\r\n    >\r\n      <Box\r\n        pb={3}\r\n        px={3}\r\n        fontSize={{ base: \"28px\", md: \"30px\" }}\r\n        fontFamily=\"Work sans\"\r\n        d=\"flex\"\r\n        w=\"100%\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n      >\r\n        My Chats\r\n        <GroupChatModal>\r\n          <Button\r\n            d=\"flex\"\r\n            fontSize={{ base: \"17px\", md: \"10px\", lg: \"17px\" }}\r\n            rightIcon={<AddIcon />}\r\n          >\r\n            New Group Chat\r\n          </Button>\r\n        </GroupChatModal>\r\n      </Box>\r\n      <Box\r\n        d=\"flex\"\r\n        flexDir=\"column\"\r\n        p={3}\r\n        bg=\"#F8F8F8\"\r\n        w=\"100%\"\r\n        h=\"100%\"\r\n        borderRadius=\"lg\"\r\n        overflowY=\"hidden\"\r\n      >\r\n        {/* List of chats with everyone */}\r\n        {chats ? (\r\n          <Stack overflowY=\"scroll\">\r\n            {chats.map((chat) => (\r\n              <Box\r\n                onClick={() => setSelectedChat(chat)}\r\n                cursor=\"pointer\"\r\n                bg={selectedChat === chat ? \"#38B2AC\" : \"#E8E8E8\"}\r\n                color={selectedChat === chat ? \"white\" : \"black\"}\r\n                px={3}\r\n                py={2}\r\n                borderRadius=\"lg\"\r\n                key={chat._id}\r\n              >\r\n                <Text>\r\n                  {!chat.isGroupChat\r\n                    ? getSender(loggedUser, chat.users)\r\n                    : chat.chatName}\r\n                </Text>\r\n                {chat.latestMessage && (\r\n                  <Text fontSize=\"xs\">\r\n                    <b>{chat.latestMessage.sender.name} : </b>\r\n                    {chat.latestMessage.content.length > 50\r\n                      ? chat.latestMessage.content.substring(0, 51) + \"...\"\r\n                      : chat.latestMessage.content}\r\n                  </Text>\r\n                )}\r\n              </Box>\r\n            ))}\r\n          </Stack>\r\n        ) : (\r\n          <ChatLoading />\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default MyChats;\r\n","D:\\MERN Chat-App\\react-frontend\\src\\components\\ChatBox.js",[],"D:\\MERN Chat-App\\react-frontend\\src\\components\\Modals\\ProfileModal.js",[],"D:\\MERN Chat-App\\react-frontend\\src\\components\\ChatLoading.js",[],"D:\\MERN Chat-App\\react-frontend\\src\\components\\Users\\UserListItem.js",[],"D:\\MERN Chat-App\\react-frontend\\src\\config\\ChatLogics.js",[],"D:\\MERN Chat-App\\react-frontend\\src\\components\\Modals\\GroupChatModal.js",[],"D:\\MERN Chat-App\\react-frontend\\src\\components\\Users\\UserBadgeItem.js",["91"],"import { CloseIcon } from \"@chakra-ui/icons\";\r\nimport { Badge, Box } from \"@chakra-ui/layout\";\r\nimport React from \"react\";\r\n\r\nfunction UserBadgeItem({ user, handleFunction, admin }) {\r\n  return (\r\n    <Badge\r\n      px={2}\r\n      py={1}\r\n      borderRadius=\"lg\"\r\n      m={1}\r\n      mb={2}\r\n      variant=\"solid\"\r\n      fontSize={12}\r\n      colorScheme=\"purple\"\r\n      cursor=\"pointer\"\r\n      onClick={handleFunction}\r\n    >\r\n      {user.name}\r\n      {admin === user._id && <span> (Admin)</span>}\r\n      <CloseIcon pl={1} />\r\n    </Badge>\r\n  );\r\n}\r\n\r\nexport default UserBadgeItem;\r\n","D:\\MERN Chat-App\\react-frontend\\src\\components\\SingleChat.js",["92","93"],"D:\\MERN Chat-App\\react-frontend\\src\\components\\Modals\\UpdateGroupChatModal.js",[],"D:\\MERN Chat-App\\react-frontend\\src\\components\\ScrollableChat.js",[],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":23,"column":6,"nodeType":"100","endLine":23,"endColumn":8,"suggestions":"101"},{"ruleId":"102","severity":1,"message":"103","line":15,"column":17,"nodeType":"104","messageId":"105","endLine":15,"endColumn":24},{"ruleId":"98","severity":1,"message":"106","line":44,"column":6,"nodeType":"100","endLine":44,"endColumn":18,"suggestions":"107"},{"ruleId":"102","severity":1,"message":"108","line":2,"column":17,"nodeType":"104","messageId":"105","endLine":2,"endColumn":20},{"ruleId":"98","severity":1,"message":"109","line":40,"column":6,"nodeType":"100","endLine":40,"endColumn":20,"suggestions":"110"},{"ruleId":"98","severity":1,"message":"111","line":53,"column":6,"nodeType":"100","endLine":53,"endColumn":8,"suggestions":"112"},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["115"],"no-unused-vars","'setUser' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'fetchChats'. Either include it or remove the dependency array.",["116"],"'Box' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchMessage'. Either include it or remove the dependency array.",["117"],"React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["118"],"no-global-assign","no-unsafe-negation",{"desc":"119","fix":"120"},{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},"Update the dependencies array to be: [history]",{"range":"127","text":"128"},"Update the dependencies array to be: [fetchAgain, fetchChats]",{"range":"129","text":"130"},"Update the dependencies array to be: [fetchMessage, selectedChat]",{"range":"131","text":"132"},"Update the dependencies array to be: [user]",{"range":"133","text":"134"},[543,545],"[history]",[1402,1414],"[fetchAgain, fetchChats]",[1635,1649],"[fetchMessage, selectedChat]",[2035,2037],"[user]"]